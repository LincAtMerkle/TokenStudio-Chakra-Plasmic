// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/react-web/lib/host";
import GlobalContextsProvider from "../components/plasmic/plasmic_poc_localhost/PlasmicGlobalContextsProvider";
import { ScreenVariantProvider } from "../components/plasmic/plasmic_poc_localhost/PlasmicGlobalVariant__Screen";
import { PlasmicHomePage } from "../components/plasmic/plasmic_poc_localhost/PlasmicHomePage";
import { useRouter } from "next/router";


import { Button as ChakraButton } from '../src/components/button';
import { Button, DropdownMenu, Heading, Stack } from '@tokens-studio/ui'
import { ChakraBaseProvider } from '@chakra-ui/react'
import { ModifierProvider } from '../src/components/tokensCtx';



function HomePage() {
  // Use PlasmicHomePage to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicHomePage are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicHomePage is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).

  const [color, setColor] = React.useState('blue');
  const [type, setType] = React.useState('casual');


  const handleColorChange = (ev) => {
    const key = ev.currentTarget.dataset.key;
    setColor(key);
  }

  const handleTypeChange = (ev) => {
    const key = ev.currentTarget.dataset.key;
    setType(key);
  }

  return (
    // <GlobalContextsProvider>
    <ChakraBaseProvider>
    <ModifierProvider modifiers={{ color, type }}>
      <ph.PageParamsProvider
        params={useRouter()?.query}
        query={useRouter()?.query}
      >
        <ModifierProvider modifiers={{ color: 'blue' }}>
            <ChakraButton>Click Me </ChakraButton>
          </ModifierProvider>
            <PlasmicHomePage />
      </ph.PageParamsProvider>
    </ModifierProvider>
    </ChakraBaseProvider>
    // </GlobalContextsProvider>  
  );
}

export default HomePage;
