const StyleDictionary = require("style-dictionary");
const {
    registerTransforms,
    transforms,
  } = require("@tokens-studio/sd-transforms");

const { promises } = require("node:fs");

registerTransforms(StyleDictionary);

StyleDictionary.registerTransformGroup({
    name: "custom/tokens-studio",
    transforms: [...transforms, "attribute/cti", "name/cti/kebab"],
  });

const tokenFilter = (cat) => (token) => token.attributes.category === cat;

const generateFilesArr = (tokensCategories, theme) => {
    return tokensCategories.map((cat) => ({
      filter: tokenFilter(cat),
      destination: `./src/components/${cat}/tokens/${cat}-${theme.toLowerCase()}.tokens`,
      format: "css/variables",
      options: {
        selector: ":host",
        fileHeader: "autoGeneratedFileHeader",
      },
    }));
  };

async function run() {
    const $themes = JSON.parse(await promises.readFile("./src/tokens/$themes.json"));
    const configs = $themes.map((theme) => ({
        source: Object.entries(theme.selectedTokenSets)
          .filter(([, val]) => val !== "disabled")
          .map(([tokenset]) => `./src/tokens/${tokenset}.json`),
        fileHeader: {
          autoGeneratedFileHeader: () => {
            return [`Do not edit directly, this file was auto-generated`];
          },
        },
        platforms: {
          css: {
            transformGroup: "custom/tokens-studio",
            files: generateFilesArr(
              [
                "accordion",
                "accordionbutton",
                "accordionicon",
                "accordionitem",
                "accordionpanel",
                "alert",
                "alertdialog",
                "aspectratio",
                "avatar",
                "avatarbadge",
                "avatargroup",
                "badge",
                "box",
                "breadcrumb",
                "breadcrumbitem",
                "breadcrumblink",
                "breadcrumbseparator",
                "button",
                "buttongroup",                
                "card",
                "cardbody",
                "cardfooter",
                "cardheader",
                "center",
                "checkbox",
                "checkboxgroup",
                "circularprogress",
                "closebutton",
                "code",
                "container",
                "divider",
                "drawer",
                "editable",
                "flex",
                "formcontrol",
                "formerrormessage",
                "formhelpertext",
                "formlabel",
                "grid",
                "heading",
                "highlight",
                "hstack",
                "icon",
                "iconbutton",
                "image",
                "input",
                "kbd",
                "link",
                "linkoverlay",
                "list",
                "menu",
                "modal",
                "modalbody",
                "modalclosebutton",
                "modalcontent",
                "modalfooter",
                "modalheader",
                "modaloverlay",
                "numberdecrementstepper",
                "numberincrementstepper",
                "numberinput",
                "numberinputfield",
                "numberinputstepper",
                "pininput",
                "pininputfield",
                "popover",
                "popoverarrow",
                "popoverbody",
                "popoverclosebutton",
                "popovercontent",
                "popoverheader",
                "popovertrigger",
                "portal",
                "progress",
                "radio",
                "radiogroup",
                "rangeslider",
                "select",
                "showhide",
                "simplegrid",
                "skeleton",
                "skipnav",
                "slider",
                "spinner",
                "stack",
                "stat",
                "statarrow",
                "stathelptext",
                "statlabel",
                "statnumber",
                "stepper",
                "switch",
                "tab",
                "table",
                "tablecaption",
                "tablecontainer",
                "tablist",
                "tabpanel",
                "tabpanels",
                "tabs",
                "tag",
                "tagclosebutton",
                "taglabel",
                "taglefticon",
                "tagrighticon",
                "tbody",
                "td",
                "text",
                "textarea",
                "tfoot",
                "th",
                "thead",
                "toast",
                "tooltip",
                "tr",
                "transitions",
                "visuallyhidden",
                "vstack",
                "wrap",
              ], theme.name),
          },
        },
      }));


      
    configs.forEach((cfg) => {
        const sd = StyleDictionary.extend(cfg);
        sd.cleanAllPlatforms();
        sd.buildAllPlatforms();
      });
}

run();